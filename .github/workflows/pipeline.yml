name: CI Checks

on: 
  pull_request:
    branches:
      - main
  push: 
    branches:
      - main
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.18
    - name: Check out code into Go module directory
      uses: actions/checkout@v2    
    - name: Run test
      run: make test
    - name: Coverage Check
      run: make coverage
    - name: Generate Report
      run: make report
    - name: Copy files
      run: | 
           mkdir reports
           cp cover.html reports/.
    - name: Archive
      uses: actions/upload-artifact@v4
      with: 
          name: reports
          path: reports
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Checkout code into Go module directory
        uses: actions/checkout@v2
      - name: Run format check
        run: make check-format
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.18

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Build
      run: make build

    - name: Copy Files
      run: |
           mkdir artifacts
           cp api artifacts/.

    - name: Archive
      uses: actions/upload-artifact@v4
      with: 
        name: api
        path: artifacts 
  deliver:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download binary
      uses: actions/download-artifact@v4
      with:
        name: api
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: | 
            Still in experiment phase
        draft: true
        prerelease: true
    - name: Upload Release binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: api
        asset_name: api
        asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}    
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Authenticate to Google Cloud with Service Account Key
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: translate
          entry_point: Translate
          runtime: go121
          project_id: mustbe93751
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
  deploy-pass:
    name: Deploy PaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name=='push' && github.ref == 'refs/heads/main'}} 
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Authenticate to Google Cloud with Service Account Key
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy App
        id: deploy
        uses: google-github-actions/deploy-appengine@v1
        with:
          project_id: mustbe93751
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"
